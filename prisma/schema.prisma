// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String         @unique
  email   String         @unique
  entries JournalEntry[]
}

// a journal will only have one user but a user can have many entries so one to many so an array of journal entries
model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  content  String    @db.Text
  // one to one relationship analysis has one journal and journal has one analysis. has to have an optional because then we wont be able to create journal from start 
  analysis Analysis?

  // compound index, combo of two things
  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id])

  mood     String
  summary  String  @db.Text
  color    String
  negative Boolean

  // we probably need this in all because if youre querying without index, you're scanning the whole table which is bad.
  @@unique([entryId])
}
